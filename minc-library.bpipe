TEMPLATE_DIR="/data/chamal/projects/raihaan/templates"
LIBRARY_DIR="/data/chamal/projects/raihaan/BEaST_libraries/ADNI_library"
CUTNECKMODELDIR="/home/cic/patrai/cutneck/ICBM_09c"
CUTNECKMODELNAME="mni_icbm152_t1_tal_nlin_sym_09c"


n3correct = {
    //Runs the nu_correct (aka n3correct) command with optimal settings according to
    //http://www.ncbi.nlm.nih.gov/pubmed/19559796
    //Requires minc-toolkit
    exec "nu_correct -verbose -clobber -iter 200 -shrink 2 -stop 0.000001 -fwhm 0.15 -distance 30 $input.mnc $output.mnc"
}

nlm_denoise = {
    //Runs non-local-means filter on data
    //http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4359947
    //Requires minc-toolkit
    exec "volume_denoise.pl $input.mnc $output.mnc --verbose --clobber"
}

anlm_denoise = {
    //Runs the "improved" adaptive non local means filter
    //http://onlinelibrary.wiley.com/doi/10.1002/jmri.22003/full
    //Requires minc-toolkit
    exec "minc_anlm --rician --verbose $input.mnc $output.mnc"
}

n4correct = {
    //Runs the improved n3correct aka N4correct
    //http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=5445030
    //Requires ANTs as it uses ANTs/ITK's implementation, as minc-toolkit's is buggy
    //ANTs must be loaded after minc-toolkit to override the minc-toolkit version
    exec "N4BiasFieldCorrection -d 3 -r -s 2 -b [200] -c [200x200x200x200,0.0] -i $input.mnc -o $output.mnc"
}

dumb_normalize = {
	//Performs a dumb normalization of the data, throwing away top and bottom 1%
	//Data is then scaled 0-65535 and stored in a sensible unsigned int format
	//Requires minc-toolkit
	exec """
	minccalc -2 -clobber -expression "A[0]<(0.01*\$(mincstats -quiet -max $input.mnc)) || A[0]>(0.99*\$(mincstats -quiet -max $input.mnc)) ? 0 : A[0]" $input.mnc $output.tmp
	"""
	exec """
	minccalc -2 -short -unsigned -clobber -expression "A[0]/\$(mincstats -quiet -max $output.tmp)*65535" $output.tmp $output.mnc
	"""
}

nuyl_normalize = {
    //Performs normalization against a model using minc_nuyl
    //Requires NORMALIZEMODEL to be set to a reference mnc (atlas perhaps?)
    //See http://www.ncbi.nlm.nih.gov/pubmed/10784285
}

pol_normalize = {
    //Performs normalization against a model using volume_pol
    //Requires NORMALIZEMODEL to be set to a reference mnc (atlas perhaps?)
    //

}

inormalize = {
    //Performal normalization against a model using inormalize (normalize_mri)
}


cutneck = {
    //Linearly registers brain to standard template
    //Computes inverse of linear transform
    //Transforms template's neck mask to subject space
    //Applies transformed mask to subject
    //WARNING: longfilenames/paths break history generation
    //comment out update_history in autocrop to fix
    //Requires minc-toolkit
    exec """
    mincANTS 3 -m CC[$input.mnc,$CUTNECKMODELDIR/${CUTNECKMODELNAME}.mnc,1,4] 
     -i 0
     -o $output.xfm
     --number-of-affine-iterations 10000x10000x10000x10000x10000
     --continue-affine true
     --affine-gradient-descent-option 0.5x0.95x1.e-4x1.e-4
     --MI-option 32x16000 
    """
    exec """
    mincresample -verbose -clobber -2 -short -unsigned -keep_real_range -like $input.mnc -transform $output.xfm -invert_transformation $CUTNECKMODELDIR/${CUTNECKMODELNAME}_headmask.mnc $output.tmp
    """
    exec """
    autocrop -clobber -verbose -short -bbox $output.tmp -isoexpand 5 $input.mnc $output.mnc
    """
}

beastnormalize = {
    branch.origname = "$input"
    exec "beast_normalize $input.mnc $output.mnc $output.xfm -non3 -modeldir $TEMPLATE_DIR"
}

beastmask = {
    exec "mincbeast -clobber -verbose $LIBRARY_DIR $input.mnc $output.mnc -fill -median -nlm_filter -same_res -flip -conf $LIBRARY_DIR/default.1mm.conf"
}

beastresample = {
    from("xfm", "mnc") {
        exec "mincresample -invert_transformation -like $origname -transformation $input.xfm $input.mnc $output.mnc"
    }
}

beastextract = {
    exec "minccalc -expression A[0]*A[1] $origname $input.mnc $output.mnc"
}

beast = segment {
    //Runs the beast brain extraction toolchain
    //Requires models defined in $TEMPLATE_DIR and a library in $LIBRARY_DIR
    //Requires minc-toolkit
    beastnormalize + beastmask + beastresample + beastextract
}

preprocess = segment {
	//Default best-practices preprocessing pipeline to run on all data
	anlm_denoise + n4correct
}

Bpipe.run {
 "%.mnc" * [preprocess]
}
