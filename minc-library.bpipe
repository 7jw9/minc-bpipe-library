TEMPLATE_DIR="/data/chamal/projects/raihaan/templates"
LIBRARY_DIR="/data/chamal/projects/raihaan/BEaST_libraries/ADNI_library"

n3correct = {
        exec "nu_correct -verbose -clobber -iter 200 -shrink 2 -stop 0.000001 -fwhm 0.15 -distance 30 $input.mnc $output.mnc"
}

nlm_denoise = {
        exec "volume_denoise.pl $input.mnc $output.mnc --verbose --clobber"
}

anlm_denoise = {
        exec "minc_anlm --verbose $input.mnc $output.mnc"
}

n4correct = {
        exec "N4BiasFieldCorrection -d 3 -r -s 2 -b [200] -c [200x200x200x200,0.0] -i $input.mnc -o $output.mnc"
}

dumb_normalize = {
	//Performs a dumb normalization of the data, throwing away top and bottom 1% and then scaling 0 to 65535
	exec """
	minccalc -2 -clobber -expression "A[0]<(0.01*\$(mincstats -quiet -max $input.mnc)) || A[0]>(0.99*\$(mincstats -quiet -max $input.mnc)) ? 0 : A[0]" $input.mnc $output.tmp
	"""
	exec """
	minccalc -2 -short -unsigned -clobber -expression "A[0]/\$(mincstats -quiet -max $output.tmp)*65535" $output.tmp $output.mnc
	"""
}

beastnormalize = {
    branch.origname = "$input"
    exec "beast_normalize $input.mnc $output.mnc $output.xfm -non3 -modeldir $TEMPLATE_DIR"
}

beastmask = {
    exec "mincbeast -clobber -verbose $LIBRARY_DIR $input.mnc $output.mnc -fill -median -nlm_filter -same_res -conf $LIBRARY_DIR/default.1mm.conf"
}

beastresample = {
    from("xfm", "mnc") {
        exec "mincresample -invert_transformation -like $origname -transformation $input.xfm $input.mnc $output.mnc"
    }
}

beastextract = {
    exec "minccalc -expression A[0]*A[1] $origname $input.mnc $output.mnc"
}

beast = segment {
    beastnormalize + beastmask + beastresample + beastextract
}

preprocess = segment {
	anlm_denoise + n4correct
}

Bpipe.run {
 "%.mnc" * [preprocess]
}
